{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gustavo\\\\mychat\\\\src\\\\components\\\\SendMessageForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessageForm = ({\n  topic\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(`/api/send-message?topic=${topic}`, {\n        username,\n        message\n      });\n      setMessage(''); // Limpiar el campo de mensaje después de enviar\n    } catch (error) {\n      console.error('Error al enviar el mensaje', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Nombre de usuario\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Mensaje\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      children: \"Enviar Mensaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(SendMessageForm, \"iOnL7uIdV58jgTDQIdQCgVNU6S4=\");\n_c = SendMessageForm;\nexport default SendMessageForm;\nvar _c;\n$RefreshReg$(_c, \"SendMessageForm\");","map":{"version":3,"names":["React","useState","TextField","Button","axios","jsxDEV","_jsxDEV","SendMessageForm","topic","_s","username","setUsername","message","setMessage","handleSubmit","event","preventDefault","post","error","console","onSubmit","children","label","variant","fullWidth","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","color","type","_c","$RefreshReg$"],"sources":["C:/Users/Gustavo/mychat/src/components/SendMessageForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst SendMessageForm = ({ topic }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await axios.post(`/api/send-message?topic=${topic}`, { username, message });\r\n      setMessage('');  // Limpiar el campo de mensaje después de enviar\r\n    } catch (error) {\r\n      console.error('Error al enviar el mensaje', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label=\"Nombre de usuario\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        required\r\n      />\r\n      <TextField\r\n        label=\"Mensaje\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        required\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n        Enviar Mensaje\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SendMessageForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMZ,KAAK,CAACa,IAAI,CAAC,2BAA2BT,KAAK,EAAE,EAAE;QAAEE,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC3EC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAE;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMc,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBAC3Bf,OAAA,CAACJ,SAAS;MACRoB,KAAK,EAAC,mBAAmB;MACzBC,OAAO,EAAC,UAAU;MAClBC,SAAS;MACTC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA,CAACJ,SAAS;MACRoB,KAAK,EAAC,SAAS;MACfC,OAAO,EAAC,UAAU;MAClBC,SAAS;MACTC,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGC,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA,CAACH,MAAM;MAACoB,OAAO,EAAC,WAAW;MAACW,KAAK,EAAC,SAAS;MAACC,IAAI,EAAC,QAAQ;MAAAd,QAAA,EAAC;IAE1D;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACxB,EAAA,CArCIF,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}