{"ast":null,"code":"import PropTypes from 'prop-types';\nimport deepmerge from '@mui/utils/deepmerge';\nimport merge from \"../merge/index.js\";\nimport { isCqShorthand, getContainerQuery } from \"../cssContainerQueries/index.js\";\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nexport const values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n};\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nconst defaultContainerQueries = {\n  containerQueries: containerName => ({\n    up: key => {\n      let result = typeof key === 'number' ? key : values[key] || key;\n      if (typeof result === 'number') {\n        result = `${result}px`;\n      }\n      return containerName ? `@container ${containerName} (min-width:${result})` : `@container (min-width:${result})`;\n    }\n  })\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      if (isCqShorthand(themeBreakpoints.keys, breakpoint)) {\n        const containerKey = getContainerQuery(theme.containerQueries ? theme : defaultContainerQueries, breakpoint);\n        if (containerKey) {\n          acc[containerKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n        }\n      }\n      // key is breakpoint\n      else if (Object.keys(themeBreakpoints.values || values).includes(breakpoint)) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n      return acc;\n    }, {});\n  }\n  const output = styleFromPropValue(propValue);\n  return output;\n}\nfunction breakpoints(styleFunction) {\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction({\n          theme,\n          ...props[key]\n        });\n      }\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? {\n    ...styleFunction.propTypes,\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  } : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\n  const breakpointsInOrder = breakpointsInput.keys?.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n    return acc;\n  }, style);\n}\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\n\n// compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\nexport function computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== 'object') {\n    return {};\n  }\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n  return base;\n}\nexport function resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n    return acc;\n  }, {});\n}\nexport default breakpoints;","map":{"version":3,"names":["PropTypes","deepmerge","merge","isCqShorthand","getContainerQuery","values","xs","sm","md","lg","xl","defaultBreakpoints","keys","up","key","defaultContainerQueries","containerQueries","containerName","result","handleBreakpoints","props","propValue","styleFromPropValue","theme","Array","isArray","themeBreakpoints","breakpoints","reduce","acc","item","index","Object","breakpoint","containerKey","includes","mediaKey","cssKey","output","styleFunction","newStyleFunction","base","extended","propTypes","process","env","NODE_ENV","object","filterProps","createEmptyBreakpointObject","breakpointsInput","breakpointsInOrder","breakpointStyleKey","removeUnusedBreakpoints","breakpointKeys","style","breakpointOutput","isBreakpointUnused","length","mergeBreakpointsInOrder","styles","emptyBreakpoints","mergedOutput","prev","next","computeBreakpointsBase","breakpointValues","breakpointsKeys","forEach","i","resolveBreakpointValues","customBase","previous"],"sources":["/home/alumno/SD_IoT/Kafka/mychat/node_modules/@mui/system/esm/breakpoints/breakpoints.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport deepmerge from '@mui/utils/deepmerge';\nimport merge from \"../merge/index.js\";\nimport { isCqShorthand, getContainerQuery } from \"../cssContainerQueries/index.js\";\n\n// The breakpoint **start** at this value.\n// For instance with the first breakpoint xs: [xs, sm[.\nexport const values = {\n  xs: 0,\n  // phone\n  sm: 600,\n  // tablet\n  md: 900,\n  // small laptop\n  lg: 1200,\n  // desktop\n  xl: 1536 // large screen\n};\nconst defaultBreakpoints = {\n  // Sorted ASC by size. That's important.\n  // It can't be configured as it's used statically for propTypes.\n  keys: ['xs', 'sm', 'md', 'lg', 'xl'],\n  up: key => `@media (min-width:${values[key]}px)`\n};\nconst defaultContainerQueries = {\n  containerQueries: containerName => ({\n    up: key => {\n      let result = typeof key === 'number' ? key : values[key] || key;\n      if (typeof result === 'number') {\n        result = `${result}px`;\n      }\n      return containerName ? `@container ${containerName} (min-width:${result})` : `@container (min-width:${result})`;\n    }\n  })\n};\nexport function handleBreakpoints(props, propValue, styleFromPropValue) {\n  const theme = props.theme || {};\n  if (Array.isArray(propValue)) {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return propValue.reduce((acc, item, index) => {\n      acc[themeBreakpoints.up(themeBreakpoints.keys[index])] = styleFromPropValue(propValue[index]);\n      return acc;\n    }, {});\n  }\n  if (typeof propValue === 'object') {\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    return Object.keys(propValue).reduce((acc, breakpoint) => {\n      if (isCqShorthand(themeBreakpoints.keys, breakpoint)) {\n        const containerKey = getContainerQuery(theme.containerQueries ? theme : defaultContainerQueries, breakpoint);\n        if (containerKey) {\n          acc[containerKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n        }\n      }\n      // key is breakpoint\n      else if (Object.keys(themeBreakpoints.values || values).includes(breakpoint)) {\n        const mediaKey = themeBreakpoints.up(breakpoint);\n        acc[mediaKey] = styleFromPropValue(propValue[breakpoint], breakpoint);\n      } else {\n        const cssKey = breakpoint;\n        acc[cssKey] = propValue[cssKey];\n      }\n      return acc;\n    }, {});\n  }\n  const output = styleFromPropValue(propValue);\n  return output;\n}\nfunction breakpoints(styleFunction) {\n  // false positive\n  // eslint-disable-next-line react/function-component-definition\n  const newStyleFunction = props => {\n    const theme = props.theme || {};\n    const base = styleFunction(props);\n    const themeBreakpoints = theme.breakpoints || defaultBreakpoints;\n    const extended = themeBreakpoints.keys.reduce((acc, key) => {\n      if (props[key]) {\n        acc = acc || {};\n        acc[themeBreakpoints.up(key)] = styleFunction({\n          theme,\n          ...props[key]\n        });\n      }\n      return acc;\n    }, null);\n    return merge(base, extended);\n  };\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? {\n    ...styleFunction.propTypes,\n    xs: PropTypes.object,\n    sm: PropTypes.object,\n    md: PropTypes.object,\n    lg: PropTypes.object,\n    xl: PropTypes.object\n  } : {};\n  newStyleFunction.filterProps = ['xs', 'sm', 'md', 'lg', 'xl', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\nexport function createEmptyBreakpointObject(breakpointsInput = {}) {\n  const breakpointsInOrder = breakpointsInput.keys?.reduce((acc, key) => {\n    const breakpointStyleKey = breakpointsInput.up(key);\n    acc[breakpointStyleKey] = {};\n    return acc;\n  }, {});\n  return breakpointsInOrder || {};\n}\nexport function removeUnusedBreakpoints(breakpointKeys, style) {\n  return breakpointKeys.reduce((acc, key) => {\n    const breakpointOutput = acc[key];\n    const isBreakpointUnused = !breakpointOutput || Object.keys(breakpointOutput).length === 0;\n    if (isBreakpointUnused) {\n      delete acc[key];\n    }\n    return acc;\n  }, style);\n}\nexport function mergeBreakpointsInOrder(breakpointsInput, ...styles) {\n  const emptyBreakpoints = createEmptyBreakpointObject(breakpointsInput);\n  const mergedOutput = [emptyBreakpoints, ...styles].reduce((prev, next) => deepmerge(prev, next), {});\n  return removeUnusedBreakpoints(Object.keys(emptyBreakpoints), mergedOutput);\n}\n\n// compute base for responsive values; e.g.,\n// [1,2,3] => {xs: true, sm: true, md: true}\n// {xs: 1, sm: 2, md: 3} => {xs: true, sm: true, md: true}\nexport function computeBreakpointsBase(breakpointValues, themeBreakpoints) {\n  // fixed value\n  if (typeof breakpointValues !== 'object') {\n    return {};\n  }\n  const base = {};\n  const breakpointsKeys = Object.keys(themeBreakpoints);\n  if (Array.isArray(breakpointValues)) {\n    breakpointsKeys.forEach((breakpoint, i) => {\n      if (i < breakpointValues.length) {\n        base[breakpoint] = true;\n      }\n    });\n  } else {\n    breakpointsKeys.forEach(breakpoint => {\n      if (breakpointValues[breakpoint] != null) {\n        base[breakpoint] = true;\n      }\n    });\n  }\n  return base;\n}\nexport function resolveBreakpointValues({\n  values: breakpointValues,\n  breakpoints: themeBreakpoints,\n  base: customBase\n}) {\n  const base = customBase || computeBreakpointsBase(breakpointValues, themeBreakpoints);\n  const keys = Object.keys(base);\n  if (keys.length === 0) {\n    return breakpointValues;\n  }\n  let previous;\n  return keys.reduce((acc, breakpoint, i) => {\n    if (Array.isArray(breakpointValues)) {\n      acc[breakpoint] = breakpointValues[i] != null ? breakpointValues[i] : breakpointValues[previous];\n      previous = i;\n    } else if (typeof breakpointValues === 'object') {\n      acc[breakpoint] = breakpointValues[breakpoint] != null ? breakpointValues[breakpoint] : breakpointValues[previous];\n      previous = breakpoint;\n    } else {\n      acc[breakpoint] = breakpointValues;\n    }\n    return acc;\n  }, {});\n}\nexport default breakpoints;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}