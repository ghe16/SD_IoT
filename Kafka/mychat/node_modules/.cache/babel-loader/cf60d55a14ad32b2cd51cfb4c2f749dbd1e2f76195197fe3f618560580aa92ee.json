{"ast":null,"code":"import styledEngineStyled, { internal_mutateStyles as mutateStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from \"../createTheme/index.js\";\nimport styleFunctionSx from \"../styleFunctionSx/index.js\";\nimport preprocessStyles from \"../preprocessStyles.js\";\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-labels */\n/* eslint-disable no-lone-blocks */\n\nexport const systemDefaultTheme = createTheme();\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction attachTheme(props, themeId, defaultTheme) {\n  props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;\n}\nfunction processStyle(props, style) {\n  /*\n   * Style types:\n   *  - null/undefined\n   *  - string\n   *  - CSS style object: { [cssKey]: [cssValue], variants }\n   *  - Processed style object: { style, variants, isProcessed: true }\n   *  - Array of any of the above\n   */\n\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(props, subStyle));\n  }\n  if (Array.isArray(resolvedStyle?.variants)) {\n    let rootStyle;\n    if (resolvedStyle.isProcessed) {\n      rootStyle = resolvedStyle.style;\n    } else {\n      const {\n        variants,\n        ...otherStyles\n      } = resolvedStyle;\n      rootStyle = otherStyles;\n    }\n    return processStyleVariants(props, resolvedStyle.variants, [rootStyle]);\n  }\n  if (resolvedStyle?.isProcessed) {\n    return resolvedStyle.style;\n  }\n  return resolvedStyle;\n}\nfunction processStyleVariants(props, variants, results = []) {\n  let mergedState; // We might not need it, initialized lazily\n\n  variantLoop: for (let i = 0; i < variants.length; i += 1) {\n    const variant = variants[i];\n    if (typeof variant.props === 'function') {\n      mergedState ??= {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      };\n      if (!variant.props(mergedState)) {\n        continue;\n      }\n    } else {\n      for (const key in variant.props) {\n        if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) {\n          continue variantLoop;\n        }\n      }\n    }\n    if (typeof variant.style === 'function') {\n      mergedState ??= {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      };\n      results.push(variant.style(mergedState));\n    } else {\n      results.push(variant.style);\n    }\n  }\n  return results;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  function styleAttachTheme(props) {\n    attachTheme(props, themeId, defaultTheme);\n  }\n  const styled = (tag, inputOptions = {}) => {\n    // If `tag` is already a styled component, filter out the `sx` style function\n    // to prevent unnecessary styles generated by the composite components.\n    mutateStyles(tag, styles => styles.filter(style => style !== styleFunctionSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label: generateStyledLabel(componentName, componentSlot),\n      ...options\n    });\n    const transformStyle = style => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof style === 'function' && style.__emotion_real !== style) {\n        return function styleFunctionProcessor(props) {\n          return processStyle(props, style);\n        };\n      }\n      if (isPlainObject(style)) {\n        const serialized = preprocessStyles(style);\n        if (!serialized.variants) {\n          return serialized.style;\n        }\n        return function styleObjectProcessor(props) {\n          return processStyle(props, serialized);\n        };\n      }\n      return style;\n    };\n    const muiStyledResolver = (...expressionsInput) => {\n      const expressionsHead = [];\n      const expressionsBody = expressionsInput.map(transformStyle);\n      const expressionsTail = [];\n\n      // Preprocess `props` to set the scoped theme value.\n      // This must run before any other expression.\n      expressionsHead.push(styleAttachTheme);\n      if (componentName && overridesResolver) {\n        expressionsTail.push(function styleThemeOverrides(props) {\n          const theme = props.theme;\n          const styleOverrides = theme.components?.[componentName]?.styleOverrides;\n          if (!styleOverrides) {\n            return null;\n          }\n          const resolvedStyleOverrides = {};\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey]);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsTail.push(function styleThemeVariants(props) {\n          const theme = props.theme;\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyleVariants(props, themeVariants);\n        });\n      }\n      if (!skipSx) {\n        expressionsTail.push(styleFunctionSx);\n      }\n\n      // This function can be called as a tagged template, so the first argument would contain\n      // CSS `string[]` values.\n      if (Array.isArray(expressionsBody[0])) {\n        const inputStrings = expressionsBody.shift();\n\n        // We need to add placeholders in the tagged template for the custom functions we have\n        // possibly added (attachTheme, overrides, variants, and sx).\n        const placeholdersHead = new Array(expressionsHead.length).fill('');\n        const placeholdersTail = new Array(expressionsTail.length).fill('');\n        let outputStrings;\n        // prettier-ignore\n        {\n          outputStrings = [...placeholdersHead, ...inputStrings, ...placeholdersTail];\n          outputStrings.raw = [...placeholdersHead, ...inputStrings.raw, ...placeholdersTail];\n        }\n\n        // The only case where we put something before `attachTheme`\n        expressionsHead.unshift(outputStrings);\n      }\n      const expressions = [...expressionsHead, ...expressionsBody, ...expressionsTail];\n      const Component = defaultStyledResolver(...expressions);\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        Component.displayName = generateDisplayName(componentName, componentSlot, tag);\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction generateDisplayName(componentName, componentSlot, tag) {\n  if (componentName) {\n    return `${componentName}${capitalize(componentSlot || '')}`;\n  }\n  return `Styled(${getDisplayName(tag)})`;\n}\nfunction generateStyledLabel(componentName, componentSlot) {\n  let label;\n  if (process.env.NODE_ENV !== 'production') {\n    if (componentName) {\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n    }\n  }\n  return label;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}","map":{"version":3,"names":["styledEngineStyled","internal_mutateStyles","mutateStyles","isPlainObject","capitalize","getDisplayName","createTheme","styleFunctionSx","preprocessStyles","systemDefaultTheme","shouldForwardProp","prop","defaultOverridesResolver","slot","_props","styles","attachTheme","props","themeId","defaultTheme","theme","isObjectEmpty","processStyle","style","resolvedStyle","Array","isArray","flatMap","subStyle","variants","rootStyle","isProcessed","otherStyles","processStyleVariants","results","mergedState","variantLoop","i","length","variant","ownerState","key","push","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","styleAttachTheme","styled","tag","inputOptions","filter","name","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","lowercaseFirstLetter","options","undefined","shouldForwardPropOption","isStringTag","defaultStyledResolver","label","generateStyledLabel","transformStyle","__emotion_real","styleFunctionProcessor","serialized","styleObjectProcessor","muiStyledResolver","expressionsInput","expressionsHead","expressionsBody","map","expressionsTail","styleThemeOverrides","styleOverrides","components","resolvedStyleOverrides","slotKey","styleThemeVariants","themeVariants","inputStrings","shift","placeholdersHead","fill","placeholdersTail","outputStrings","raw","unshift","expressions","Component","muiName","process","env","NODE_ENV","displayName","generateDisplayName","withConfig","object","_","charCodeAt","string","charAt","toLowerCase","slice"],"sources":["/home/alumno/SD_IoT/Kafka/mychat/node_modules/@mui/system/esm/createStyled/createStyled.js"],"sourcesContent":["import styledEngineStyled, { internal_mutateStyles as mutateStyles } from '@mui/styled-engine';\nimport { isPlainObject } from '@mui/utils/deepmerge';\nimport capitalize from '@mui/utils/capitalize';\nimport getDisplayName from '@mui/utils/getDisplayName';\nimport createTheme from \"../createTheme/index.js\";\nimport styleFunctionSx from \"../styleFunctionSx/index.js\";\nimport preprocessStyles from \"../preprocessStyles.js\";\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-labels */\n/* eslint-disable no-lone-blocks */\n\nexport const systemDefaultTheme = createTheme();\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (_props, styles) => styles[slot];\n}\nfunction attachTheme(props, themeId, defaultTheme) {\n  props.theme = isObjectEmpty(props.theme) ? defaultTheme : props.theme[themeId] || props.theme;\n}\nfunction processStyle(props, style) {\n  /*\n   * Style types:\n   *  - null/undefined\n   *  - string\n   *  - CSS style object: { [cssKey]: [cssValue], variants }\n   *  - Processed style object: { style, variants, isProcessed: true }\n   *  - Array of any of the above\n   */\n\n  const resolvedStyle = typeof style === 'function' ? style(props) : style;\n  if (Array.isArray(resolvedStyle)) {\n    return resolvedStyle.flatMap(subStyle => processStyle(props, subStyle));\n  }\n  if (Array.isArray(resolvedStyle?.variants)) {\n    let rootStyle;\n    if (resolvedStyle.isProcessed) {\n      rootStyle = resolvedStyle.style;\n    } else {\n      const {\n        variants,\n        ...otherStyles\n      } = resolvedStyle;\n      rootStyle = otherStyles;\n    }\n    return processStyleVariants(props, resolvedStyle.variants, [rootStyle]);\n  }\n  if (resolvedStyle?.isProcessed) {\n    return resolvedStyle.style;\n  }\n  return resolvedStyle;\n}\nfunction processStyleVariants(props, variants, results = []) {\n  let mergedState; // We might not need it, initialized lazily\n\n  variantLoop: for (let i = 0; i < variants.length; i += 1) {\n    const variant = variants[i];\n    if (typeof variant.props === 'function') {\n      mergedState ??= {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      };\n      if (!variant.props(mergedState)) {\n        continue;\n      }\n    } else {\n      for (const key in variant.props) {\n        if (props[key] !== variant.props[key] && props.ownerState?.[key] !== variant.props[key]) {\n          continue variantLoop;\n        }\n      }\n    }\n    if (typeof variant.style === 'function') {\n      mergedState ??= {\n        ...props,\n        ...props.ownerState,\n        ownerState: props.ownerState\n      };\n      results.push(variant.style(mergedState));\n    } else {\n      results.push(variant.style);\n    }\n  }\n  return results;\n}\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  function styleAttachTheme(props) {\n    attachTheme(props, themeId, defaultTheme);\n  }\n  const styled = (tag, inputOptions = {}) => {\n    // If `tag` is already a styled component, filter out the `sx` style function\n    // to prevent unnecessary styles generated by the composite components.\n    mutateStyles(tag, styles => styles.filter(style => style !== styleFunctionSx));\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot)),\n      ...options\n    } = inputOptions;\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, {\n      shouldForwardProp: shouldForwardPropOption,\n      label: generateStyledLabel(componentName, componentSlot),\n      ...options\n    });\n    const transformStyle = style => {\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      if (typeof style === 'function' && style.__emotion_real !== style) {\n        return function styleFunctionProcessor(props) {\n          return processStyle(props, style);\n        };\n      }\n      if (isPlainObject(style)) {\n        const serialized = preprocessStyles(style);\n        if (!serialized.variants) {\n          return serialized.style;\n        }\n        return function styleObjectProcessor(props) {\n          return processStyle(props, serialized);\n        };\n      }\n      return style;\n    };\n    const muiStyledResolver = (...expressionsInput) => {\n      const expressionsHead = [];\n      const expressionsBody = expressionsInput.map(transformStyle);\n      const expressionsTail = [];\n\n      // Preprocess `props` to set the scoped theme value.\n      // This must run before any other expression.\n      expressionsHead.push(styleAttachTheme);\n      if (componentName && overridesResolver) {\n        expressionsTail.push(function styleThemeOverrides(props) {\n          const theme = props.theme;\n          const styleOverrides = theme.components?.[componentName]?.styleOverrides;\n          if (!styleOverrides) {\n            return null;\n          }\n          const resolvedStyleOverrides = {};\n\n          // TODO: v7 remove iteration and use `resolveStyleArg(styleOverrides[slot])` directly\n          // eslint-disable-next-line guard-for-in\n          for (const slotKey in styleOverrides) {\n            resolvedStyleOverrides[slotKey] = processStyle(props, styleOverrides[slotKey]);\n          }\n          return overridesResolver(props, resolvedStyleOverrides);\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsTail.push(function styleThemeVariants(props) {\n          const theme = props.theme;\n          const themeVariants = theme?.components?.[componentName]?.variants;\n          if (!themeVariants) {\n            return null;\n          }\n          return processStyleVariants(props, themeVariants);\n        });\n      }\n      if (!skipSx) {\n        expressionsTail.push(styleFunctionSx);\n      }\n\n      // This function can be called as a tagged template, so the first argument would contain\n      // CSS `string[]` values.\n      if (Array.isArray(expressionsBody[0])) {\n        const inputStrings = expressionsBody.shift();\n\n        // We need to add placeholders in the tagged template for the custom functions we have\n        // possibly added (attachTheme, overrides, variants, and sx).\n        const placeholdersHead = new Array(expressionsHead.length).fill('');\n        const placeholdersTail = new Array(expressionsTail.length).fill('');\n        let outputStrings;\n        // prettier-ignore\n        {\n          outputStrings = [...placeholdersHead, ...inputStrings, ...placeholdersTail];\n          outputStrings.raw = [...placeholdersHead, ...inputStrings.raw, ...placeholdersTail];\n        }\n\n        // The only case where we put something before `attachTheme`\n        expressionsHead.unshift(outputStrings);\n      }\n      const expressions = [...expressionsHead, ...expressionsBody, ...expressionsTail];\n      const Component = defaultStyledResolver(...expressions);\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        Component.displayName = generateDisplayName(componentName, componentSlot, tag);\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n  return styled;\n}\nfunction generateDisplayName(componentName, componentSlot, tag) {\n  if (componentName) {\n    return `${componentName}${capitalize(componentSlot || '')}`;\n  }\n  return `Styled(${getDisplayName(tag)})`;\n}\nfunction generateStyledLabel(componentName, componentSlot) {\n  let label;\n  if (process.env.NODE_ENV !== 'production') {\n    if (componentName) {\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n    }\n  }\n  return label;\n}\nfunction isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nfunction lowercaseFirstLetter(string) {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}