{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","map":{"version":3,"names":["React","PropTypes","clsx","composeClasses","styled","memoTheme","useDefaultProps","Person","getAvatarUtilityClass","useSlot","jsx","_jsx","useUtilityClasses","ownerState","classes","variant","colorDefault","slots","root","img","fallback","AvatarRoot","name","slot","overridesResolver","props","styles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","textAlign","objectFit","textIndent","AvatarFallback","useLoaded","crossOrigin","referrerPolicy","src","srcSet","loaded","setLoaded","useState","useEffect","undefined","active","image","Image","onload","onerror","srcset","forwardRef","inProps","ref","alt","children","childrenProp","className","component","slotProps","imgProps","sizes","other","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps","elementType","externalForwardedProps","additionalProps","as","process","env","NODE_ENV","propTypes","string","node","object","oneOfType","func","sx","arrayOf","bool","oneOf"],"sources":["C:/Users/Gustavo/mychat/node_modules/@mui/material/Avatar/Avatar.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}