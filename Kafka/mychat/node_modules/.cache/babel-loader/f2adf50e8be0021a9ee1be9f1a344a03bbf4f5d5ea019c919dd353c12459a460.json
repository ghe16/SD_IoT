{"ast":null,"code":"import { ForwardRef, Memo } from 'react-is';\nfunction getFunctionComponentName(Component, fallback = '') {\n  return Component.displayName || Component.name || fallback;\n}\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n}\n\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName\n */\nexport default function getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n  if (typeof Component === 'string') {\n    return Component;\n  }\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\n  if (typeof Component === 'object') {\n    switch (Component.$$typeof) {\n      case ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n      case Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n      default:\n        return undefined;\n    }\n  }\n  return undefined;\n}","map":{"version":3,"names":["ForwardRef","Memo","getFunctionComponentName","Component","fallback","displayName","name","getWrappedName","outerType","innerType","wrapperName","functionName","getDisplayName","undefined","$$typeof","render","type"],"sources":["/home/alumno/SD_IoT/Kafka/mychat/node_modules/@mui/utils/esm/getDisplayName/getDisplayName.js"],"sourcesContent":["import { ForwardRef, Memo } from 'react-is';\nfunction getFunctionComponentName(Component, fallback = '') {\n  return Component.displayName || Component.name || fallback;\n}\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n}\n\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName\n */\nexport default function getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n  if (typeof Component === 'string') {\n    return Component;\n  }\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\n  if (typeof Component === 'object') {\n    switch (Component.$$typeof) {\n      case ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n      case Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n      default:\n        return undefined;\n    }\n  }\n  return undefined;\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,QAAQ,UAAU;AAC3C,SAASC,wBAAwBA,CAACC,SAAS,EAAEC,QAAQ,GAAG,EAAE,EAAE;EAC1D,OAAOD,SAAS,CAACE,WAAW,IAAIF,SAAS,CAACG,IAAI,IAAIF,QAAQ;AAC5D;AACA,SAASG,cAAcA,CAACC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAE;EACzD,MAAMC,YAAY,GAAGT,wBAAwB,CAACO,SAAS,CAAC;EACxD,OAAOD,SAAS,CAACH,WAAW,KAAKM,YAAY,KAAK,EAAE,GAAG,GAAGD,WAAW,IAAIC,YAAY,GAAG,GAAGD,WAAW,CAAC;AACzG;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASE,cAAcA,CAACT,SAAS,EAAE;EAChD,IAAIA,SAAS,IAAI,IAAI,EAAE;IACrB,OAAOU,SAAS;EAClB;EACA,IAAI,OAAOV,SAAS,KAAK,QAAQ,EAAE;IACjC,OAAOA,SAAS;EAClB;EACA,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAE;IACnC,OAAOD,wBAAwB,CAACC,SAAS,EAAE,WAAW,CAAC;EACzD;;EAEA;EACA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;IACjC,QAAQA,SAAS,CAACW,QAAQ;MACxB,KAAKd,UAAU;QACb,OAAOO,cAAc,CAACJ,SAAS,EAAEA,SAAS,CAACY,MAAM,EAAE,YAAY,CAAC;MAClE,KAAKd,IAAI;QACP,OAAOM,cAAc,CAACJ,SAAS,EAAEA,SAAS,CAACa,IAAI,EAAE,MAAM,CAAC;MAC1D;QACE,OAAOH,SAAS;IACpB;EACF;EACA,OAAOA,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}