{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_createChainedFunction as createChainedFunction } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\nimport { ModalManager, ariaHidden } from \"./ModalManager.js\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst manager = new ModalManager();\n/**\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/#hook)\n *\n * API:\n *\n * - [useModal API](https://mui.com/base-ui/react-modal/hooks-api/#use-modal)\n */\nfunction useModal(parameters) {\n  const {\n    container,\n    disableEscapeKeyDown = false,\n    disableScrollLock = false,\n    closeAfterTransition = false,\n    onTransitionEnter,\n    onTransitionExited,\n    children,\n    onClose,\n    open,\n    rootRef\n  } = parameters;\n\n  // @ts-ignore internal logic\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, rootRef);\n  const [exited, setExited] = React.useState(!open);\n  const hasTransition = getHasTransition(children);\n  let ariaHiddenProp = true;\n  if (parameters['aria-hidden'] === 'false' || parameters['aria-hidden'] === false) {\n    ariaHiddenProp = false;\n  }\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mount = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = () => manager.isTopModal(getModal());\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else if (modalRef.current) {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || event.which === 229 ||\n    // Wait until IME is settled.\n    !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const createHandleBackdropClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const getRootProps = (otherHandlers = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters);\n\n    // The custom event handlers shouldn't be spread on the root element\n    delete propsEventHandlers.onTransitionEnter;\n    delete propsEventHandlers.onTransitionExited;\n    const externalEventHandlers = {\n      ...propsEventHandlers,\n      ...otherHandlers\n    };\n    return {\n      /*\n       * Marking an element with the role presentation indicates to assistive technology\n       * that this element should be ignored; it exists to support the web application and\n       * is not meant for humans to interact with directly.\n       * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md\n       */\n      role: 'presentation',\n      ...externalEventHandlers,\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      ref: handleRef\n    };\n  };\n  const getBackdropProps = (otherHandlers = {}) => {\n    const externalEventHandlers = otherHandlers;\n    return {\n      'aria-hidden': true,\n      ...externalEventHandlers,\n      onClick: createHandleBackdropClick(externalEventHandlers),\n      open\n    };\n  };\n  const getTransitionProps = () => {\n    const handleEnter = () => {\n      setExited(false);\n      if (onTransitionEnter) {\n        onTransitionEnter();\n      }\n    };\n    const handleExited = () => {\n      setExited(true);\n      if (onTransitionExited) {\n        onTransitionExited();\n      }\n      if (closeAfterTransition) {\n        handleClose();\n      }\n    };\n    return {\n      onEnter: createChainedFunction(handleEnter, children?.props.onEnter),\n      onExited: createChainedFunction(handleExited, children?.props.onExited)\n    };\n  };\n  return {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    rootRef: handleRef,\n    portalRef: handlePortalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  };\n}\nexport default useModal;","map":{"version":3,"names":["React","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_useEventCallback","useEventCallback","unstable_createChainedFunction","createChainedFunction","extractEventHandlers","ModalManager","ariaHidden","getContainer","container","getHasTransition","children","props","hasOwnProperty","manager","useModal","parameters","disableEscapeKeyDown","disableScrollLock","closeAfterTransition","onTransitionEnter","onTransitionExited","onClose","open","rootRef","modal","useRef","mountNodeRef","modalRef","handleRef","exited","setExited","useState","hasTransition","ariaHiddenProp","getDoc","current","getModal","mount","handleMounted","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","handlePortalRef","node","handleClose","useCallback","remove","useEffect","createHandleKeyDown","otherHandlers","event","onKeyDown","key","which","stopPropagation","createHandleBackdropClick","onClick","target","currentTarget","getRootProps","propsEventHandlers","externalEventHandlers","role","ref","getBackdropProps","getTransitionProps","handleEnter","handleExited","onEnter","onExited","portalRef"],"sources":["C:/Users/Gustavo/mychat/node_modules/@mui/material/Modal/useModal.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback, unstable_createChainedFunction as createChainedFunction } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\nimport { ModalManager, ariaHidden } from \"./ModalManager.js\";\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(children) {\n  return children ? children.props.hasOwnProperty('in') : false;\n}\n\n// A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\nconst manager = new ModalManager();\n/**\n *\n * Demos:\n *\n * - [Modal](https://mui.com/base-ui/react-modal/#hook)\n *\n * API:\n *\n * - [useModal API](https://mui.com/base-ui/react-modal/hooks-api/#use-modal)\n */\nfunction useModal(parameters) {\n  const {\n    container,\n    disableEscapeKeyDown = false,\n    disableScrollLock = false,\n    closeAfterTransition = false,\n    onTransitionEnter,\n    onTransitionExited,\n    children,\n    onClose,\n    open,\n    rootRef\n  } = parameters;\n\n  // @ts-ignore internal logic\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, rootRef);\n  const [exited, setExited] = React.useState(!open);\n  const hasTransition = getHasTransition(children);\n  let ariaHiddenProp = true;\n  if (parameters['aria-hidden'] === 'false' || parameters['aria-hidden'] === false) {\n    ariaHiddenProp = false;\n  }\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mount = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    });\n\n    // Fix a bug on Chrome where the scroll isn't initially 0.\n    if (modalRef.current) {\n      modalRef.current.scrollTop = 0;\n    }\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer);\n\n    // The element was already mounted.\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = () => manager.isTopModal(getModal());\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else if (modalRef.current) {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || event.which === 229 ||\n    // Wait until IME is settled.\n    !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const createHandleBackdropClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const getRootProps = (otherHandlers = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters);\n\n    // The custom event handlers shouldn't be spread on the root element\n    delete propsEventHandlers.onTransitionEnter;\n    delete propsEventHandlers.onTransitionExited;\n    const externalEventHandlers = {\n      ...propsEventHandlers,\n      ...otherHandlers\n    };\n    return {\n      /*\n       * Marking an element with the role presentation indicates to assistive technology\n       * that this element should be ignored; it exists to support the web application and\n       * is not meant for humans to interact with directly.\n       * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md\n       */\n      role: 'presentation',\n      ...externalEventHandlers,\n      onKeyDown: createHandleKeyDown(externalEventHandlers),\n      ref: handleRef\n    };\n  };\n  const getBackdropProps = (otherHandlers = {}) => {\n    const externalEventHandlers = otherHandlers;\n    return {\n      'aria-hidden': true,\n      ...externalEventHandlers,\n      onClick: createHandleBackdropClick(externalEventHandlers),\n      open\n    };\n  };\n  const getTransitionProps = () => {\n    const handleEnter = () => {\n      setExited(false);\n      if (onTransitionEnter) {\n        onTransitionEnter();\n      }\n    };\n    const handleExited = () => {\n      setExited(true);\n      if (onTransitionExited) {\n        onTransitionExited();\n      }\n      if (closeAfterTransition) {\n        handleClose();\n      }\n    };\n    return {\n      onEnter: createChainedFunction(handleEnter, children?.props.onEnter),\n      onExited: createChainedFunction(handleExited, children?.props.onExited)\n    };\n  };\n  return {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    rootRef: handleRef,\n    portalRef: handlePortalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  };\n}\nexport default useModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}